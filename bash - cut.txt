----------------------
# cat testfile.txt
yum - Yellowdog Updater Modified
top - display Linux processes
ls - list directory contents
----------------------


---------- COLUMNS ----------

## Select Column of Characters:
$ cut -c2 testfile.txt
u
o
s

# Select range of columns:
$ cut -c1-10 testfile.txt
yum - Yell
top - disp
ls - list

-or-
$ echo abcde | cut -c1-3,5
abce


# Specify only the start position before the ‘-‘.
## Extracts from 3rd character to end of each line:
$ cut -c3- testfile.txt
m - Yellowdog Updater Modified
p - display Linux processes
- list directory contents

# Specify only the end position after the ‘-‘.
## Extract 10 characters from the beginning of each line:
$ cut -c-10 testfile.txt
yum - Yell
top - disp
ls - list



---------- FIELDS ----------

## Delimit on ':' and select Field 1:
$ cut -d':' -f1 /etc/passwd
root
bin
daemon
adm
lp



## Select Multiple Fields from a File:
$ cut -d: -f1,6,7 /etc/passwd
root:/root:/bin/bash
bin:/bin:/sbin/nologin
daemon:/sbin:/sbin/nologin


## Using PIPE:
$ grep bash /etc/passwd | cut -d':' -f1,6
root:/root
admin:/home/admin
dev:/home/dev

### In above example, if you pass a different delimiter other than : (colon),
cut will just display the whole line, eg:

$ cut -d_ -f1 /etc/passwd
root:x:0:0:root:/root:/bin/bash
bin:x:1:1:bin:/bin:/sbin/nologin
daemon:x:2:2:daemon:/sbin:/sbin/nologin
...

## Select Fields Only When a Line Contains the Delimiter
-s, --only-delimited - do not print lines not containing delimiters

### The following doesn't display any output, as cut command didn’t find any lines that has | (pipe) as delimiter in the /etc/passwd file:
$ cut -d'|' -s -f1 /etc/passwd


## Select All Fields Except the Specified Fields
[ Returns inverse - all except specified field(s) ]

### This will have the same output:

## Example 1:
$ cut -d: -f7 /etc/passwd
-same as-
$ cut -d: -f1,2,3,4,5,6 /etc/passwd --complement


## Example 2:
$ echo a b c d e | cut -d" " -f2 -s
b
$ echo a b c d e | cut -d" " -f2 --complement
a c d e

$ echo abcde | cut -c1-3,5
abce



---------- OUTPUT ----------

## Change Output Delimiter for Display

### By default the output delimiter is same as input delimiter specified with -d option.
### Eg. Change to ___

$ cut -d: -f1,6,7 /etc/passwd --output-delimiter='___'
root___/root___/bin/bash
bin___/bin___/sbin/nologin
daemon___/sbin___/sbin/nologin



## Change Output Delimiter to Newline

$ grep admin /etc/passwd | cut -d: -f1,6,7 --output-delimiter=$'\n'
admin
/home/admin
/bin/bash



---------- COMBINE WITH OUT CMDS ----------

$ ps axu | grep python | grep -v grep | sed 's/\s\+/ /g' | cut -d' ' -f2,11
1445 /usr/libexec/platform-python
1496 /usr/libexec/platform-python



---------- IP EXAMPLES ----------


# ip addr show enp0s3 | grep inet | awk {'print $2'}
10.0.2.15/24

-then-

# ip addr show enp0s3 | grep inet | awk {'print $2'} | cut -d/ -f1
10.0.2.15

-f1 = Field 1
-f2 = Field 2

--------------------------

# ifconfig ens3 | grep inet6 | awk {'print $2'}
fe80::17ff:fe01:6011

ifconfig ens3 | grep inet6 | awk {'print $2'} | cut -d: -f4
fe01

ifconfig ens3 | grep inet6 | awk {'print $2'} | cut -d: -f4 | cut -df -f2
e01

ifconfig ens3 | grep inet6 | awk {'print $2'} | cut -d: -f4 | cut -df -f2 | cut -d1 -f1
e0

--------------------------

# man cut

-c, --characters=LIST
select only these characters

-d, --delimiter=DELIM
use DELIM instead of TAB for field delimiter

-f, --fields=LIST
select  only  these fields;
also print any line that contains no delimiter character,
unless the -s option is specified

--complement
complement the set of selected bytes, characters or fields [inverse]

-s, --only-delimited
do not print lines NOT containing delimiters

--output-delimiter=STRING
use STRING as the output delimiter the default is to use the input delimiter

--------------------------
