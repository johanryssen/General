Puppet CLI

# Bootstrap client
puppet agent -t --server <puppet master> [<options>]

# Display facts:
facter # All system facts
facter -p # All system and Puppet facts
facter -y # YAML
facter -j # JSON

facter [-p] <name> # A specific fact

# Examples
facter memoryfree
facter is_virtual processor0

# Find out effective classes on a node
cat /var/lib/puppet/classes.txt

# Find out when which file was modified
cd /var/lib/puppet
for i in $(find clientbucket/ -name paths); do
echo "$(stat -c %y $i | sed 's/\..*//') $(cat $i)";
done | sort -n

# Puppet Dry Run:
puppet agent --noop --verbose

# Disable agent
puppet agent --disable
puppet agent --disable "Optional message"
puppet agent --enable

# Executing selective classes
puppet agent --tags Some::Class

# Managing Certificates (on master)
puppet cert list
puppet cert list --all
puppet cert sign <name>
puppet cert clean <name> # removes cert

# Managing Nodes
puppet node clean <name> # removes node + cert

# Managing Modules
puppet module list
puppet module install <name>
puppet module uninstall <name>
puppet module upgrade <name>
puppet module search <name>

# Inspecting Resources/Types
puppet describe -l
puppet resource <type name>

# Querying Examples
puppet resource user john.smith
puppet resource service apache
puppet resource mount /data
puppet resource file /etc/motd
puppet resource package wget

# Trigger puppet run from master
puppet kick <name>
puppet kick -p 5 <names> # 5 parallel

Hiera

# On Puppet master:
hiera <key> # to query common.yaml only
hiera <key> -m <FQDN> # to query config of a given node (using mcollective)
hiera <key> -i <FQDN> # to query config of a given node (using Puppet inventory)
hiera <key> environment=production fqdn=myhost1 # to pass values for hiera.yaml

# To dump complex data
hiera -a <array key>
hiera -h <hash key>

Encryption with eyaml

eyaml encrypt -f <filename>
eyaml encrypt -s <string>
eyaml encrypt -p # Encrypt password, will prompt for it

eyaml decrypt -f <filename>
eyaml decrypt -s <string>

eyaml edit -f <filename> # Decrypts, launches in editor and reencrypts

Hiera+Puppet Debugging

puppet apply -e "notice(hiera_array('some key'))"
