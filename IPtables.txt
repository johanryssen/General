IPtables
How to restrict a port or service to a specific IP or range of IPs.
Entering the following at root will allow SSH connections from the first two locations and drop them from everywhere else:

iptables -I INPUT -p tcp -m tcp -s 70.85.189.123 --dport 22 -j ACCEPT
iptables -I INPUT -p tcp -m tcp -s 70.85.189.100/29 --dport 22 -j ACCEPT
iptables -I INPUT -p tcp -m tcp -s 0.0.0.0/0 --dport 22 -j DROP

To survive reboots, use iptables-save.
Red Hat-based systems will store the configuration here:
/etc/sysconfig/iptables.

If you would like to edit this file directly, use the following:

-A INPUT -p tcp -m tcp -s 70.85.189.123 --dport 22 -j ACCEPT
-A INPUT -p tcp -m tcp -s 70.85.189.100/29 --dport 22 -j ACCEPT
-A INPUT -p tcp -m tcp -s 0.0.0.0/0 --dport 22 -j DROP

IPtables (like most hardware firewalls), uses stateful packet inspection.
It will read the rules in order from top to bottom.
This is why we put all the allowed networks first and then put in a blanket deny all (0.0.0.0/0).
You can enter hosts into IPtables using any of the following formats:
IP address: ex. 70.85.189.123
DNS name: ex. skullbox.net
CIDR: ex. 70.85.189.100/29


# Block particular tcp port in Linux
iptables -A INPUT -p tcp --destination-port PORT-NUBMER -j DROP

# For example block port 22 for everyone:
iptables -A INPUT -p tcp --destination-port 22 -j DROP

# Now let us say you want block port 22 for everyone except for IP 123.321.123.321
iptables -A INPUT -p tcp --destination-port 22 -s \! 123.321.123.321 -j DROP

# To block UDP ports use --tcp udp option:
iptables -A INPUT -p udp --destination-port PORT-NUBMER -j DROP