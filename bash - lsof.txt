(1)  List opened files under a directory
+D Will recurse sub directories
+d Won't recurse.
# lsof +D /var/log/

(2)  List processes using a mount point
Sometimes when we try to umount a directory, the system will say 'Device or Resource Busy' error.
# lsof /home
The following will also work.
# lsof +D /home/
-or-
# lsof +f -- /media/usb0
+f --	Tells lsof to treat the subsequent argument as a mount point;
it usually, but not always, manages on its own, so that lsof /media/usb0 also works.
This finds open files (even unlinked ones), memory mapped files, current directories, and some more obscure uses.

There are uses that lsof will not find; these are uncommon on removable media. They include:
    mount points: you can't unmount /foo if /foo/bar is a mount point.
    mount devices: you can't unmount /foo if /foo/bar is a mounted block device or loop-mounted regular file, or if it is the source of a Linux bind mount.
    NFS export: lsof won't detect that a tree is exported by a kernel NFS server.

Another command that can serve in a pinch is fuser, which only lists PIDs of processes with open files on the device:
fuser -m /media/usb0

(3) List files opened by a specific user
# lsof -u user1

(4) Exclude a user
# lsof -u ^user2

(5) List all open files by a specific process
# lsof -p <PID>

(6) Kill all process that belongs to a particular user
# kill -9 `lsof -t -u user3`

(7) List process ID of a process which opened /var/log/syslog
# lsof -t /var/log/syslog

(8) Execute lsof in repeat mode
+r 	-	Repeat mode will end when no open files are found.
-r 	-	Will continue to list,delay,list until a interrupt is given irrespective if files are open or not.
# lsof -u root -c init -a -r5
