DNS

dnstop -l 3 eth0

Traffic capturung tool:
dnscap -g

rndc stats

Visualise DNS taraffic flow:
# tcpdump -i eth0 -w dnsdump.pcap port 53
# dnspktflow dnsdump.pcap
# eog out.png

Download an XZone file and check for issues:
# dnswalk gnu.org

Tracing the Chain of Trust to the root Trust Anchor:
# drill dnskey . | grep 257 > root.key
# drill -SD -k root.key www.ripe.net

unbound-host lets you view every step of DNSSEC validation
# unbound-host -C /etc/unbound/unbound.conf -dvv www.isc.org

Verify named.conf for syntax errors
# named-check -z

Print broken BIND config in nicely formated notation
# named-checkconf -p > named.conf

Check shortcuts for errors:
# named-checkzone -D problemdomian.com problemdomain.com-zone

BIND collects changes to dynamic zones in a binary journal file
@ named-journalprint dynamic.signed.dnslab.org.jnl

nsupdate -h

==============================
sudo tail -100f  /var/named/chroot/var/named/stats/named.stats

dnstop eth0

/usr/sbin/nscd -g
sudo tail -100f  /var/log/messages

==============================

Actually you have 3 ways to obtain statistics:

     1. rndc stats
     2. HTTP (statistics-channel)
     3. Queries log (will log ALL queries for ALL zones)

##########

## A, CNAME, ALIAS and URL records

A, CNAME, ALIAS and URL records are all possible solutions to point a host name (name hereafter) to your site.
However, they have some small differences that affect how the client will reach your site.

Before going further into the details, it’s important to know that A and CNAME records are standard DNS records, whilst ALIAS and URL records are custom DNS records provided by DNSimple’s DNS hosting.
Both of them are translated internally into A records to ensure compatibility with the DNS protocol.

Understanding the differences
Here’s the main differences:
- The A record maps a name to one or more IP addresses, when the IP are known and stable.
- The CNAME record maps a name to another name. It should only be used when there are no other records on that name.
- The ALIAS record maps a name to another name, but in turns it can coexist with other records on that name.
- The URL record redirects the name to the target name using the HTTP 301 status code.

Some important rules to keep in mind:
- The A, CNAME, ALIAS records causes a name to resolve to an IP.
- Vice-versa, the URL record redirects the name to a destination.
- The URL record is simple and effective way to apply a redirect for a name to another name, for example to redirect www.example.com to example.com.
- The A name must resolve to an IP, the CNAME and ALIAS record must point to a name.

## Which one to use
Understanding the difference between the A name and the CNAME records will help you to decide.

The general rule is:
- use an A record if you manage what IP addresses are assigned to a particular machine or if the IP are fixed (this is the most common case)
- use a CNAME record if you want to alias a name to another name, and you don’t need other records (such as MX records for emails) for the same name
- use an ALIAS record if you are trying to alias the root domain (apex zone) or if you need other records for the same name
- use the URL record if you want the name to redirect (change address) instead of resolving to a destination.

You should never use a CNAME record for your root domain name (i.e. example.com)

## MX

The characteristic payload information of an MX record is the fully qualified domain name of a mail host and a preference value.
The host name must map directly to one or more address record (A, or AAAA) in the DNS, and must not point to any CNAME records.

In the simplest case, a domain may have just one mail server. For example, if an MTA looks up the MX records for example.com, and the DNS server replied with only mail.example.com with a preference number of 50, then the MTA will attempt delivery of the mail to the server listed. In this case, the number 50 could have been any integer permitted by the SMTP specification.

But when more than one server is returned for an MX query, the preference number for each record dictates the relative priority of the listed server.
When a remote client (typically another mail server) does an MX lookup for the domain name, it gets a list of servers and their preference numbers. The smallest preference number has the highest priority and any server with the smallest preference number must be tried first.

To provide reliable mail transmission, the SMTP client must be able to try (and retry) each of the relevant addresses in this list in order, until a delivery attempt succeeds.
If there is more than one MX record with the same preference number, all of those must be tried before moving on to lower-priority entries.

## 1 - query logging

Enable query logging rndc querylog and parse your log files, like this:

grep -Eo "client ([0-9]{1,3}[\.]){3}[0-9]{1,3}" /path/to/logfile | sort -u | uniq
client 10.0.252.1
client 10.0.231.15
client 127.0.0.1

excluding duplicates | uniq and | wc -l to count them, but don't mind to find a real solution that will be really accurate and simply.

## 2 - dnstop

Capture traffic:

tcpdump -w dump.pcap -c 10000 port 53

Parse it:

dnstop dump.pcap > report.txt

Here is the output format (Only top 50 clients):

% cat report.txt
Sources          Count      %   cum%
------------ --------- ------ ------
10.0.252.1          36   87.8   87.8
10.0.250.100         3    7.3   95.1
10.0.231.15
