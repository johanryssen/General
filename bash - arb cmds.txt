

# Find executable files
$ find <dir> -executable -type f

# Size of the items in /var/log
$ du -sh /var/log/* | sort -rn

# Find failures with journalctl
$ yum install jq -y
$ sudo journalctl --no-pager --since today --grep 'fail|error|fatal' --output json|jq '._EXE' | sort | uniq -c | sort --numeric --reverse --key 1

# Check For Enabled Repos
$ sudo awk -v RS= -F '[][]' '/enabled = 1/{print $2}' /etc/yum.repos.d/redhat.repo


# Show IPv4 and IPv6 addresses
ip a | egrep "state|global" | awk '{print $2}'


# ccze - coloured logs
tail -f -n 100 /var/log/messages | ccze
##  tailc function
### Add to .bashrc
tailc () {
    tail $@ | ccze -A
}
### Then use tailc just as you would tail.
tailc -100f /var/log/messages 



# web server
$ python3 -m http.server 8888

# Find failures with journalctl
$ sudo yum install jq -y
$ sudo journalctl --no-pager --since today --grep 'fail|error|fatal' --output json|jq '._EXE' | sort | uniq -c | sort --numeric --reverse --key 1

# Backup Local Directory to Remote Linux
$ scp -r local/source/dir user@remote_server:/path/on/remote_server

# Backup Remote Directory to Local Linux
$ scp -r user@remote_server:/path/on/remote_server local/target/dir

--- rsync ---
# Backup Local to Local:
rsync -azvP /etc/* /mnt/my-backup

# Backup Local to Remote:
rsync -azvP /etc/* username@remote_host:/backup/

## Search for a file (include some extensions, exclude others).
# grep
$ grep -R 'import' --include='*.java' --color MySourceCodeDir

# find
# (use xargs to handle a large number of matches properly)
$ find MySourceCodeDir/ -name '*.java' -type f -print| xargs grep --color 'import
# Combine find with -exec to execute actions on your files first and then pass the results to the filter.

# Disable bell sound when hitting the backspace
$ echo "set bell-style none" >> ~/.inputrc
$ bind -f ~/.inputrc

# Monitor memory without top or htop
$ watch -n 5 -d '/bin/free -m'

# Display disk partition sizes
$ lsblk --json | jq -c '.blockdevices[]|[.name,.size]'

# Convert a CSV to JSON
$ python3 -c "import csv,json,sys;print(json.dumps(list(csv.reader(open(sys.argv[1])))))" covid19-vaccinations-town-age-grp.csv


--- Weather ---
## https://github.com/chubin/wttr.in
## curl wttr.in/:help

## Auto location
curl wttr.in
-or-
wget -O- -q wttr.in

-- Location --
SyNTAX: curl wttr.in/<LOCATION>

## Airport
curl wttr.in/BNE

## City
curl wttr.in/Maroochydore

-- Options --
SYNTAX: curl wttr.in?<OPTION>
0 # only current weather
1 # current weather + today's forecast
2 # current weather + today's + tomorrow's forecast

### current weather + today's forecast:
curl wttr.in?1

## Combined
curl wttr.in/BNE?0

## Powershell
Invoke-RestMethod https://wttr.in/Brisbane


# Expose a web directory using containers
$ podman run --rm -v .:/usr/share/nginx/html:ro,Z -p 30080:80 -d nginx

# Install and run commands with Docker
$ docker run --rm --interactive curlimages/curl curl \
--verbose --location --fail --silent --output - \
https://example.com
## The command ends with a dash (-), which tells curl to output to your terminal.

-----------------------